plugins {
    id("java")
    id("org.jetbrains.kotlin.jvm") version("${kotlinVersion}")
    id("org.jetbrains.kotlin.plugin.spring") version("${kotlinVersion}")
    id("org.springframework.boot") version("${springBootVersion}")
    id("io.spring.dependency-management") version("1.0.9.RELEASE")
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")
        mavenBom("com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}")
    }
}

configurations {
//    compile.exclude group: "org.springframework.cloud", module: "spring-cloud-starter-netflix-ribbon"
    //Used undertow instead of tomcat
    compile.exclude group: "org.springframework.boot", module: "spring-boot-starter-tomcat"
    compile.exclude group: "org.apache.tomcat"
    compile.exclude group: "org.apache.tomcat.embed"
    compile.exclude group: "org.apache.tomcat", module: "tomcat-jdbc"
}

dependencies {
    compile(project(":module-api"))
    compile(project(":module-storage"))
//    compile("javax.servlet-api:${servletVersion}")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
    implementation("io.projectreactor.kotlin:reactor-kotlin-extensions")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-reactor")

    implementation("com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery")
    implementation("com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config")
    implementation("com.alibaba.cloud:spring-cloud-starter-alibaba-sentinel")

    implementation("org.springframework.cloud:spring-cloud-starter-openfeign")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-webflux")
    implementation("org.springframework.boot:spring-boot-starter-undertow")
    implementation("org.springframework.boot:spring-boot-starter-data-redis")

//    implementation("org.apache.rocketmq:rocketmq-spring-boot-starter:${springRocketMqVersion}")
    implementation("com.alibaba.csp:sentinel-datasource-nacos")
    implementation("com.google.guava:guava:${guavaVersion}")
    compileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
//    testImplementation("io.projectreactor:reactor-test")
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_14
}

compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_14
}